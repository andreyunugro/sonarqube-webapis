import { expect } from 'chai';
import * as Resources from '../../src/resources/index';

describe('Index', () => {
  expect(Resources).to.respondTo('Authentication');
  expect(Resources).to.respondTo('CE');
  expect(Resources).to.have.property('CEStatus');
  expect(Resources).to.have.property('CEAdditionalFields');
  expect(Resources).to.respondTo('Components');
  expect(Resources).to.respondTo('Duplications');
  expect(Resources).to.respondTo('Favorites');
  expect(Resources).to.respondTo('Issues');
  expect(Resources).to.have.property('IssuesAdditionalFields');
  expect(Resources).to.have.property('IssuesFacet');
  expect(Resources).to.have.property('IssuesResolution');
  expect(Resources).to.have.property('IssuesSort');
  expect(Resources).to.have.property('IssuesStatus');
  expect(Resources).to.have.property('IssuesTransition');
  expect(Resources).to.respondTo('Languages');
  expect(Resources).to.respondTo('Measures');
  expect(Resources).to.have.property('MeasuresAdditionalFields');
  expect(Resources).to.have.property('MeasuresMetricSortFilter');
  expect(Resources).to.respondTo('Metrics');
  expect(Resources).to.respondTo('Notifications');
  expect(Resources).to.have.property('NotificationsType');
  expect(Resources).to.respondTo('Permissions');
  expect(Resources).to.have.property('PermissionsValue');
  expect(Resources).to.respondTo('ProjectAnalyses');
  expect(Resources).to.have.property('ProjectAnalysesCategory');
  expect(Resources).to.have.property('ProjectAnalysesEventCategory');
  expect(Resources).to.respondTo('ProjectBadges');
  expect(Resources).to.have.property('ProjectBadgesMetric');
  expect(Resources).to.respondTo('ProjectBranches');
  expect(Resources).to.respondTo('ProjectLinks');
  expect(Resources).to.respondTo('ProjectPullRequests');
  expect(Resources).to.respondTo('ProjectTags');
  expect(Resources).to.respondTo('Projects');
  expect(Resources).to.have.property('ProjectsVisibility');
  expect(Resources).to.respondTo('QualityGates');
  expect(Resources).to.have.property('QualityGatesOperator');
  expect(Resources).to.respondTo('QualityProfiles');
  expect(Resources).to.have.property('QualityProfilesExporterKey');
  expect(Resources).to.respondTo('Rules');
  expect(Resources).to.have.property('RulesField');
  expect(Resources).to.have.property('RulesFacets');
  expect(Resources).to.have.property('RulesTypes');
  expect(Resources).to.have.property('RulesRemediationFnType');
  expect(Resources).to.respondTo('Settings');
  expect(Resources).to.respondTo('Sources');
  expect(Resources).to.respondTo('UserGroups');
  expect(Resources).to.have.property('UserGroupsSearchField');
  expect(Resources).to.respondTo('UserTokens');
  expect(Resources).to.respondTo('Users');
  expect(Resources).to.respondTo('Webhooks');
  expect(Resources).to.respondTo('WebServices');
});
